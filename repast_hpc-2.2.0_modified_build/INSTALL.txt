==============================================================================
Repast HPC 2.2 Installation

Release Date: 30 Sept. 2016
Modified: 19 Feb. 2019 -MB
==============================================================================

The original text for this file can be found in INSTALL.txt.orig
The original distribution includes some additional software, including
relogo, zimbie and rumor code that are not included here.
The only available install method is via the makefile in MANUAL_INSTALL - see below.

There are multiple, alternative ways to install Repast HPC. You will
find in the text below:

	1) An overview of 'What is installed' with Repast HPC
	2) A list of requirements for a Repast HPC installation
	3) An overview of the method of installing Repast HPC
	4) Step-by-step instructions for the method
  5) Instructions for compiling RepastHPC as static libraries when
	using the Makefile based install.

Read each section carefully.

----------------------------------------------------------------------------
What is installed:

A complete installation of Repast HPC consists of:

	1) A collection of 'include' files, and
	2) Two 'library' files: one for RepastHPC 

The 'include' files are header files (with a '.h' extenstion) that
must be 'included' in applications that wish to use Repast HPC. The library
files contain the executable functions that a RepastHPC application will use.

The original RepastHPC package also includes some demonstration applications, but
these are not included here.


----------------------------------------------------------------------------
RepastHPC Dependencies and Requirements:

RepastHPC relies on a collection of tools and libraries. Note that some
of the installation procedures discussed here will install (or will give
you the option to install) some or all of these required tools and libraries,
if they are not already found on your system.

The requirements include:

	1) A C++ compiler
	2) A 'make' utility
	3) An MPI implementation
	4) The NetCDF library (C and C++ versions) +HDF (needed for netcdf4)
	5) The CURL library
	6) Four of the Boost libraries (serialization, system, filesystem, and mpi),
              plus header-only libraries


----------------------------------------------------------------------------
Methods of installation:

It is assumed that are two methods of installation provided the installation
is for Linux only: not all possible linux distributions have been tested.
You mileage may vary.
Before starting open install.sh and Makefile in MANUAL_INSTALL and ensure that
the line starting BASE_DIR points to a suitable directory on your system (the
same for both file). You should then be able to use install.sh to follow 
the procedure below.



----------------------------------------------------------------------------
Unix/Linux/MacOSX standard installation:

General notes:
Installing and using Repast HPC requires the existence on your system
of several prerequisite components, including both tools and libraries.
The instructions and tools below show how you can determine whether these
tools and libraries exist on your system, and install them if they are not
present. One important caveat: standard installation places the tools and
libraries in common directories where they can be used by other applications;
the instructions and tools below will show you how to determine if these have
been installed in the standard places. Your system may be arranged
differently, and the libraries and tools may be in non-standard places.
Note, the automated tools below will install the required libraries etc. in
your directory. Advanced users may wish to customize the installation
to place these tools at the standard (or other) locations.

Requirement #1: A C++ Compiler
To install in a Unix/Linx/MacOSX environment you must first have a C++
compiler installed. If you do not have a C++ compiler, consult your system's
documentation or your system administrator.

(A common C++ compiler is g++; you can determine if you have gcc installed by
typing:

g++ -v

If g++ is installed and is on the execution path, this will give you version
information.)

RHPC uses some C++ features introduced with c++11. Consequently, the
C++ compiler must be C++ 11 compliant. The clang and gcc based compilers
shipping with OSX and Linux distributions are C++ 11 compliant.


Requirement #2: A 'make' utility

"make" is a utility that manages dependencies. Often compiling code depends
on compiled versions of other code; make can detect when versions change and
re-compile only the elements that need to be changed in order for the whole
collection to be current. It can also be used to automate a wide array of other
operations (copying files, etc.).

To confirm that make is installed on your system and is on the execute path,
navigate to an EMPTY directory and type:

make

If a message like 'make: *** No targets specified and no makefile found.  Stop.'
is the response, then make is installed.

If no 'make' is installed, you must install it; consult your system's
documentation, http://www.gnu.org/software/make/, and/or your system
administrator.


Requirement #3: The curl library

"curl" is a library that is required for Repast HPC to compile correctly. You
can install curl using a variety of methods. The install script included with
Repast HPC can also be used. To do this, navigate the MANUAL_INSTALL directory
in a command shell and type:

./install.sh curl

This will place the curl library in a $BASE_DIR/CURL directory

Requirement #4: An MPI implementation

Repast HPC requires an MPI implementation. In high-performance systems
this will be central to the system and will be managed by the system
administrator. On personal systems it may be available. Commonly the command:

mpicxx

will invoke the MPI compiler, if MPI has been fully installed. You can determine
more about your MPI installation by using the command:

which mpicxx

If you do not have an MPI implementation installed, you can choose among
several available options (e.g., openMPI, LAM/MPI, or MPICH).

If MPI is not already installed on your system and you wish to use MPICH
from the Repast HPC distribution, you can open a command prompt and:

1) Navigate to the 'MANUAL_INSTALL' directory of the Repast HPC download.
2) Use:

./install.sh mpich

This will execute the 'install' shell script and will install MPICH 3 on your
system in a $BASE_DIR/MPICH directory.

A useful thing to do after this installation is to add the current mpich installation
to the execution path. The command:

  export PATH=<location chosen for BASE_DIR>/MPICH/bin/:$PATH

  where you substitute with the <location...> with the path you have chosen for your install.
This will probably not permanently change the path variable; each time you
log out and back in to your command shell the variable will be re-set. To address this
you can add a command like:

PATH=<location chosen for BASE_DIR>/:$PATH

to your ~/.profile file, so that it will be executed each time you log in.


Requirement #5: NetCDF

Repast HPC in this version uses netcdf-4 (previously NetCDF-3 was used).
This also now requires HDF, as well as netcdf-c and netcdf-cxx.
A sufficiently recent version of netcdf-cxx is required - included with this
vertsion are netcdf-c-4.6.2 and netcdf-4.3.0
If these are installed in your system you should find the corresponding 
lib and include files in the standard locations.
The libraries are typically named some variation of libnetcdf.so,
libnetcdf.dylib, libnetcdf.a and libnetcdf_c++.a, libnetcdf_c++.so, and
libnetcdf_c++.dylib

If you do not have these installed, you can:

1) Navigate to the MANUAL_INSTALL directory of the Repast HPC download.
2) Use:

./install.sh netcdf

This will install both the netcdf and netcdf cpp libraries to
BASE_DIR/NetCDF and BASE_DIR/NetCDF-cxx, respectively, where
BASE_DIR has been chosen as above .

Requirement #6: Boost

Repast HPC requires the Boost library, a set of extensions to C++ available from
www.boost.org. Boost's libraries come in two varieties: some are 'header-only',
and can be used simply by including them. The others are compiled. Repast HPC
requires fourof the compiled libraries: serialization, system, filesystem, and
mpi. (The boost 'mpi'library is not to be confused with an MPI implementation
like MPICH.)
**Note you need to have MPICH installed first, before compiling the Boost
libraries, as this is required by boost-mpi**

The recommended version of Boost to be used is 1.61 or later.

If you do not have a version of Boost installed, you can:

1) Navigate to the MANUAL_INSTALL directory of the Repast HPC download
2) Edit the 'install.sh' script to make the "MPI_COMPILER_INVOCATION' variable
	(line 13) to correctly invoke your MPI implementation. Generally this will be
	'mpicxx' (possibly including a full path)
3) Use:

./install.sh boost

This will install the boost libraries (version 1.61) in a BASE_DIR/Boost directory.
To change the location, edit the BASE_DIR
variable at the beginning of the install.sh script.

Installing Repast HPC:

You can install Repast HPC with install.sh in MANUAL_INSTALL

If you have installed everything to the default locations using the install.sh
script, you can also use the install.sh in MANUAL_INSTALL:

./install.sh rhpc

This will compile dynamic libraries for repast_hpc and install 
them and the headers in BASE_DIR/repast_hpc-2.2.0/lib and
BASE_DIR/repast_hpc-2.2.0/include respectively.


-----------------------------------------------------------------------------
Compiling as static libraries

If you need to compile RHPC as static
libraries, for example, if your cluster or HPC setup expects static libraries,
you will need to do the following:

1) Use the MPI that is installed on your cluster / HPC machine, and NOT
the one bundled with this distribution and mentioned above.

2) Set the STATIC variable in the Makefile (line 18) to true:
	STATIC = true
3) make all

Depending on your system configuration, the executables may fail to compile,
but the static libraries should compile correctly. Check the output.
